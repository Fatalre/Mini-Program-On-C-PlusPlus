/*
Автор ответа: Fatalre
Задание:
По данному целому числу N распечатайте все
квадраты натуральных чисел, не превосходящие N, в порядке возрастания.

Формат входных данных
Вводится натуральное число.

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
50
Sample Output:
1 4 9 16 25 36 49

*/

#include <iostream>

using namespace std;

int main() {
    int n;
    int a = 1;
    int sq = a * a;

    cin >> n;

    while (sq <= n) {
        cout << sq << ' ';
        ++a;
        sq = a * a;
    }

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Дано целое число, не меньшее 2.
Выведите его наименьший натуральный делитель, отличный от 1.

Формат входных данных
Вводится целое положительное число.

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
15
Sample Output:
3

*/

#include <iostream>

using namespace std;

int main() {
    int n;

    cin >> n;

    int div = 2;
    while (n % div != 0) {
        ++div;
    }

    cout << div;

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
По данному числу N распечатайте все целые
степени двойки, не превосходящие N, в порядке возрастания.

Формат входных данных
Вводится натуральное число.

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
50
Sample Output:
1 2 4 8 16 32

*/

#include <iostream>

using namespace std;

int main() {
    int n;

    cin >> n;

    int t = 1;

    while (t <= n) {
        cout << t << ' ';
        t *= 2;
    }

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Дано натуральное число N. Выведите слово YES,
если число N является точной степенью двойки, или слово NO в противном случае.

Формат входных данных
Вводится натуральное число.

Формат выходных данных
Выведите ответ на задачу.

Sample Input 1:
1
Sample Output 1:
YES

Sample Input 2:
2
Sample Output 2:
YES

*/

#include <iostream>

using namespace std;

int main() {
    int n;

    cin >> n;

    int t = 1;

    while (t != n && t <= n) {
        t *= 2;
    }

    if (t == n) {
        cout << "YES";
    }
    else {
        cout << "NO";
    }

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Программа получает на вход последовательность
целых неотрицательных чисел, каждое число записано в отдельной строке.
Последовательность завершается числом 0, при считывании
которого программа должна закончить свою работу и вывести
количество членов последовательности (не считая завершающего числа 0).
Числа, следующие за числом 0, считывать не нужно.

Формат входных данных
Вводится последовательность целых чисел, заканчивающаяся числом 0.

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
1
7
9
0
5
Sample Output:
3

*/

#include <iostream>

using namespace std;

int main() {
    int n = 0;
    int tmp;

    while (cin >> tmp && tmp != 0) {
        ++n;
    }

    cout << n;

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Определите сумму всех элементов последовательности, завершающейся числом 0.

Формат входных данных
Вводится последовательность целых чисел,
оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания.

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
3
6
8
0
Sample Output:
17

*/

#include <iostream>

using namespace std;

int main() {
    int sum = 0;
    int n;

    while (cin >> n && n != 0) {
        sum += n;
    }

    cout << sum;

    return 0;
}

/*
Автор ответа: Fatalre
Задание:
Последовательность состоит из натуральных чисел и
завершается числом 0. Определите значение наибольшего элемента последовательности.

Формат входных данных
Вводится последовательность целых чисел,
оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
1
7
9
0
Sample Output:
9

*/

#include <iostream>

using namespace std;

int main() {
    int n;
    int max = -1;

    while (cin >> n && n != 0) {
        if (max < n) {
            max = n;
        }
    }

    cout << max;

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Последовательность состоит из натуральных чисел
и завершается числом 0.
Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу.

Формат входных данных
Вводится последовательность целых чисел,
оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).

Формат выходных данных
Выведите ответ на задачу.

Sample Input 1:
1
7
9
0
Sample Output 1:
1

Sample Input 2:
1
3
3
1
0
Sample Output 2:
2

*/

#include <iostream>

using namespace std;

int main() {
    int n, count = 0;
    int max = -1;

    while (cin >> n && n != 0) {
        if (max < n) {
            count = 1;
            max = n;
        }
        else if (n == max) {
            ++count;
        }
    }

    cout << count;

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Последовательность состоит из натуральных чисел и
завершается числом 0. Определите значение второго
по величине элемента в этой последовательности, то есть
элемента, который будет наибольшим, если из
последовательности удалить наибольший элемент.

Формат входных данных
Вводится последовательность целых чисел, оканчивающаяся
числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).

Формат выходных данных
Выведите ответ на задачу.

Sample Input 1:
4
4
2
3
0
Sample Output 1:
4

Sample Input 2:
2
1
0
Sample Output 2:
1

*/

#include <iostream>

using namespace std;

int main() {
    int n;
    int max = -1;
    int s_max = -1;

    while (cin >> n && n != 0) {
        if (max <= n) {
            s_max = max;
            max = n;
        }
        else if (s_max < n) {
            s_max = n;
        }
    }

    cout << s_max;

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Последовательность Фибоначчи определяется так:
F(0) = 0, F(1) = 1, …, F(n) = F(n?1) + F(n?2).
По данному числу N определите N-е число Фибоначчи F(N).

Формат входных данных
Вводится натуральное число N.

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
6
Sample Output:
8

*/

#include <iostream>

using namespace std;

int main() {
    int n;
    int f_0 = 0;
    int f_1 = 1;

    cin >> n;

    while (--n) {
        int tmp = f_1;

        f_1 += f_0;
        f_0 = tmp;
    }

    cout << f_1;

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Последовательность Фибоначчи определяется так:
F(0) = 0, F(1) = 1, …, F(n) = F(n?1) + F(n?2).
Дано натуральное число A. Определите, каким по счету
числом Фибоначчи оно является, то есть выведите такое
число N, что F(N) = A.
Если А не является числом Фибоначчи, выведите число -1.

Формат входных данных
Вводится натуральное число A.

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
8
Sample Output:
6

*/

#include <iostream>

using namespace std;

int main() {
    int a;
    int n = 1; // counter for deducing numbering of Fibonacci number
    int f_0 = 0;
    int f_1 = 1;

    cin >> a;

    while (f_1 < a) {
        int tmp = f_1;

        ++n;
        f_1 += f_0;
        f_0 = tmp;
    }

    if (f_1 == a) {
        cout << n;
    }
    else {
        cout << -1;
    }

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Дана последовательность натуральных чисел, завершающаяся числом 0.
Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.

Формат входных данных
Вводится последовательность целых чисел,
оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).

Формат выходных данных
Выведите ответ на задачу.

Sample Input:
1
7
7
9
1
0
Sample Output:
2

*/

#include <iostream>

using namespace std;

int main() {
    int n = 1;
    int n_max = 0;
    int cur = -1;
    int prev = -1;

    while (cin >> cur && cur != 0) {
        if (prev != -1) {
            if (cur == prev) {
                ++n;
            }
            else {
                if (n_max < n) {
                    n_max = n;
                }
                n = 1;
            }
        }

        prev = cur;
    }

    if (n > n_max) {
        n_max = n;
    }

    cout << n_max;

    return 0;
}
/*
Автор ответа: Fatalre
Задание:
Элемент последовательности называется локальным максимумом,
если он строго больше предыдущего и последующего элемента последовательности.
Первый и последний элемент последовательности не являются локальными максимумами.

Дана последовательность натуральных чисел, завершающаяся числом 0.
Определите количество строгих локальных максимумов в этой последовательности.

Формат входных данных
Вводится последовательность целых чисел,
оканчивающаяся числом 0 (само число 0 в последовательность не входит,
а служит как признак ее окончания).

Формат выходных данных
Выведите ответ на задачу.
Sample Input:
1
2
1
2
1
0
Sample Output:
2

*/

#include <iostream>

using namespace std;

int main() {
    int prev = -1;
    int cur = -1;

    bool prev_gr = false;
    int cnt = 0;

    // Option 1
    while (cin >> cur && cur != 0) {
        if (prev != -1) {
            if (prev < cur && !prev_gr) {
                prev_gr = true;
            }
            else if (prev_gr) {
                if (cur < prev) {
                    ++cnt;
                    prev_gr = false;
                }
                else if (cur == prev) {
                    prev_gr = false;
                }
            }
            else {
                prev_gr = false;
            }
        }

        prev = cur;
    }

    // Option 2

    if (cin >> prev && prev != 0) {
        if (cin >> cur && cur != 0) {
            int next;
            if (cin >> next) {
                while (next != 0) {
                    if (prev < cur && cur > next) {
                        ++cnt;
                    }
                    prev = cur;
                    cur = next;
                    cin >> next;
                }
            }
        }
    }

    cout << cnt;

    return 0;
}

/*
Автор ответа: Fatalre
Задание:
Определите наименьшее расстояние между двумя локальными
максимумами последовательности натуральных чисел, завершающейся числом 0.
Если в последовательности нет двух локальных максимумов, выведите число 0.
Начальное и конечное значение при этом локальными максимумами не считаются.

Формат входных данных
Вводится последовательность целых чисел, оканчивающаяся числом 0
(само число 0 в последовательность не входит, а служит как признак ее окончания).

Формат выходных данных
Выведите ответ на задачу.

Sample Input 1:
1
2
1
1
2
1
2
1
0
Sample Output 1:
2

Sample Input 2:
1
2
3
0
Sample Output 2:
0

*/

#include <iostream>
#include <algorithm>

using namespace std;

int main() {
    int prev, cur, next;
    int dist = 0;
    int cur_dist = 0;
    int min_dist = 0;

    if (cin >> prev && prev != 0) {
        if (cin >> cur && cur != 0) {
            if (cin >> next) {
                int pos = 2;
                while (next != 0) {
                    if (prev < cur && cur > next) {
                        if (dist != 0) {
                            cur_dist = pos - dist;
                            if (min_dist == 0) {
                                min_dist = cur_dist;
                            }
                            else {
                                min_dist = min(cur_dist, min_dist);
                            }
                        }

                        dist = pos;
                    }
                    ++pos;
                    prev = cur;
                    cur = next;
                    cin >> next;
                }
            }
        }
    }

    cout << min_dist;

    return 0;
}
